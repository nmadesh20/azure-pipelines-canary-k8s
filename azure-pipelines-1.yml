# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - main
  
trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '1aa9916d-fb7f-4467-af23-58d9f49f2ab7'
  imageRepository: 'nmadeshazurepipelinescanaryks'
  containerRegistry: 'myacrregistry1204.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/app/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - publish: manifests
      artifact: manifests
    
    - publish: misc
      artifact: misc
- stage: DeployCanary
  displayName: Deploy Canary
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: Deploycanary
      displayName: Deploy Canary
      pool:
        vmImage: ubuntu-latest
      environment: 'akscanary.canarydemo'
      strategy:
       runOnce:
         deploy:
          steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: azure-pipelines-canary-k8s
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes clsuter
              inputs:
               action: deploy
               strategy: canary
               percentage: '25'
               manifests: |
                 $(Pipeline.Workspace)/manifests/deployment.yml
                 $(Pipeline.Workspace)/manifests/service.yml
               containers: '$(containerRegistry)/$(imageRepository):$(tag)'
               imagePullSecrets: azure-pipelines-canary-k8s
            - task: KubernetesManifest@0
              displayName: Deploy Forbio and ServiceMonitor
              inputs:
               action: deploy
               manifests: |
                 $(Pipeline.Workspace)/misc/*
- stage: PromoteRejectCanary
  displayName: Promote or Reject canary
  dependsOn: DeployCanary
  condition: succeeded()
  jobs:
    - deployment: PromoteCanary
      displayName: Promote Canary
      pool:
        vmImage: ubuntu-latest
      environment: 'akspromote.canarydemo'
      strategy:
       runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: promote canary
            inputs:
             action: promote
             strategy: canary
             manifests: '$(Pipeline.Workspace)/manifests/*'
             containers: '$(containerRegistry)/$(imageRepository):$(tag)'
             imagePullSecrets: '$(imagePullSecret)'

- stage: RejectCanary
  displayName: Reject Canary
  dependsOn: PromoteRejectCanary
  condition: failed()
  jobs:
    - deployment: RejectCanary
      displayName: Reject Canary
      pool:
        vmImage: ubuntu-latest
      environment: 'akscanary.canarydemo'
      strategy:
       runOnce:
         deploy:
          steps:
            - task: KubernetesManifest@0
              displayName: reject canary
              inputs:
                action: reject
                strategy: canary
                manifests: '$(Pipeline.Workspace)/manifests/*'
